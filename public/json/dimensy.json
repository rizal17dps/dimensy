{
    "swagger":"2.0",
    "info":{
            "title": "Dimensy API",
            "description": "Dimensy is a Digital Document Authorization Platform that can be accessed from our website. or through API.",
            "termsOfService": "http://dimensy.id/terms/",
            "contact": [{
              "name": "API",
              "url": "http://www.dimensy.id/support",
              "email": "support@dimensy.id"
            }],
            "version": "0.1"
    },
    "servers": [
        {
          "url": "https://api.dimensy.id",
          "description": "The production API server",
          "variables": {
            "username": {
              "default": "demo",
              "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
            },
            "port": {
              "enum": [
                "8443",
                "443"
              ],
              "default": "8443"
            },
            "basePath": {
              "default": "v2"
            }
          }
        },
        {
            "url": "https://sandbox.dimensy.id",
            "description": "The Sandbox API server",
            "variables": {
              "username": {
                "default": "demo",
                "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
              },
              "port": {
                "enum": [
                  "8443",
                  "443"
                ],
                "default": "8443"
              },
              "basePath": {
                "default": "v2"
              }
            }
          }
      ],
    "tags":[
        {
            "name":"Sandbox",
            "description":"Send document in sandbox dimensy",
            "externalDocs":{
                "description":"Find out more",
                "url":""
            }
        },
        {
            "name":"Information",
            "description":"Check Information"
        },
        {
            "name":"User",
            "description":"Operations about user",
            "externalDocs":{
                "description":"Find out more about our store",
                "url":"http://swagger.io"
            }
        }],
    "schemes":["https","http"],
    "paths":
    {
        "/info/token": 
        {
            "get": 
            {
                "tags":["Information"],
                "description": "Returns the token of a certain user",
                "responses":{
                    "200":{
                        "description":"successful operation",
                        "schema":{
                            "$ref":"#/definitions/Token"
                        }
                        
                    },
                    "400":{
                        "description":"unsuccessful",
                        "schema":{
                            "$ref":"#/definitions/Token"
                        }
                        
                    }
                }
            }
        },
        "/info/{companyId}/quota": 
        {
            "get": 
            {
                "tags":["Information"],
                "summary":"checking quota",
                "description": "Returns the quota of one company",
                "consumes":["multipart/form-data"],
                "produces":["application/json"],
                "parameters":[
                    {
                        "name":"companyId",
                        "in":"path",
                        "description":"Company ID",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "name":"additionalMetadata",
                        "in":"formData",
                        "description":"Additional data to pass to server",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"successful operation",
                        "schema":{
                            "$ref":"#/definitions/Quota"
                        }
                    }
                }
            }
        },
        "/sendDocument": 
        {
            "post": 
            {
                "tags":["Sandbox"],
                "summary":"Send Document",
                "description": "Sending document to sand",
                "consumes":["multipart/form-data"],
                "produces":["application/json"],
                "parameters":[
                    {
                        "name":"api_key",
                        "in":"formData",
                        "description":"API Key from dashboard",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"username",
                        "in":"formData",
                        "description":"Username from dashboard",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"password",
                        "in":"formData",
                        "description":"Password from dashboard",
                        "required":true,
                        "type":"string"
                    }
                ],
                "requestBody": {
                    "content": {
                      "application/x-www-form-urlencoded": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "name": { 
                              "description": "Updated name of the pet",
                              "type": "string"
                            },
                            "status": {
                              "description": "Updated status of the pet",
                              "type": "string"
                            }
                          },
                          "required": ["status"] 
                        }
                    }
                    }
                },
                "responses":{
                    "200":{
                        "description":"successful operation",
                        "schema":{
                            "$ref":"#/definitions/Quota"
                        }
                    }
                }
            }
        },
        "/users": 
        {
            "get": 
            {
                "tags":["User"],
                "description": "Returns all users from the system that the user has access to",
                "responses": 
                {
                    "200": 
                    {          
                        "description": "Received users information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/getUser": 
        {
            "get": 
            {
                "tags":["User"],
                "description": "Returns a user from the requested name that the user has access to",
                "responses": 
                {
                    "200": 
                    {          
                        "description": "A User.",
                        "schema":{
                            "$ref":"#/definitions/User"
                        }
                    }
                }
            }
        },
        "/pet/{petId}/uploadImage":
        {
            "post":
            {
                "tags":["User"],
                "summary":"uploads an image",
                "description":"",
                "operationId":"uploadFile",
                "consumes":["multipart/form-data"],
                "produces":["application/json"],
                "parameters":[
                    {
                        "name":"petId",
                        "in":"path",
                        "description":"ID of pet to update",
                        "required":true,
                        "type":"integer",
                        "format":"int64"
                    },
                    {
                        "name":"additionalMetadata",
                        "in":"formData",
                        "description":"Additional data to pass to server",
                        "required":false,
                        "type":"string"
                    },
                    {
                        "name":"file",
                        "in":"formData",
                        "description":"file to upload",
                        "required":false,
                        "type":"file"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"successful operation",
                        "schema":{
                            "$ref":"#/definitions/ApiResponse"
                        }
                    }
                },
                "security":[
                    {
                        "petstore_auth":["write:pets","read:pets"]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "GeneralError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }   
                }
            }
        },
        "parameters": {
            "skipParam": {
                "name": "skip",
                "in": "query",
                "description": "number of items to skip",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }   
            },
            "limitParam": {
                "name": "limit",
                "in": "query",
                "description": "max records to return",
                "required": true,
                "schema" : {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "responses": {
            "NotFound": {
                "description": "Entity not found."
            },
            "IllegalInput": {
                "description": "Illegal input for operation."
            },
            "GeneralError": {
                "description": "General Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GeneralError"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "http://example.org/api/oauth/dialog",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": { "type": "integer", "format": "int32" },
                "type": { "type": "string" },
                "message": { "type": "string" }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": { "type": "integer", "format": "int64" },
                "name": { "type": "string" }
            },
            "xml": { "name": "Category" }
        },
        "Pet": {
            "type": "object",
            "required": ["name", "photoUrls"],
            "properties": {
                "id": { "type": "integer", "format": "int64" },
                "category": { "$ref": "#/definitions/Category" },
                "name": { "type": "string", "example": "doggie" },
                "photoUrls": {
                    "type": "array",
                    "xml": { "wrapped": true },
                    "items": { "type": "string", "xml": { "name": "photoUrl" } }
                },
                "tags": {
                    "type": "array",
                    "xml": { "wrapped": true },
                    "items": {
                        "xml": { "name": "tag" },
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "enum": ["available", "pending", "sold"]
                }
            },
            "xml": { "name": "Pet" }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": { "type": "integer", "format": "int64" },
                "name": { "type": "string" }
            },
            "xml": { "name": "Tag" }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": { "type": "integer", "format": "int64" },
                "petId": { "type": "integer", "format": "int64" },
                "quantity": { "type": "integer", "format": "int32" },
                "shipDate": { "type": "string", "format": "date-time" },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": ["placed", "approved", "delivered"]
                },
                "complete": { "type": "boolean" }
            },
            "xml": { "name": "Order" }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": { "type": "integer", "format": "int64" },
                "username": { "type": "string" },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "phone": { "type": "string" },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": { "name": "User" }
        },

        "Token": {
            "type" : "object",
            "properties": {
                "code": {
                    "type" : "integer",
                    "format" : "int32"
                },
                "token": {
                    "type" : "string"
                }
            }
        },

        "Quota": {
            "type" : "object",
            "properties": {
                "code": {
                    "type" : "integer",
                    "format" : "int32"
                },
                "data" : {
                    "type" : "object",
                    "properties" :{
                        "user" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "upload" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "storage" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "sign" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "stamp" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "meterai" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "otp" : {
                            "$ref": "#/definitions/tempQuota"
                        },
                        "keyla" : {
                            "$ref": "#/definitions/tempQuota"
                        }
                    }
                }
            },
            "xml": { "name": "Quota" }
        },
        "tempQuota" : {
            "type" : "object",
            "properties" : {
                "name" : {
                    "type": "string"
                },
                "qty" : {
                   "type" : "integer", "format" : "int64"
                }
            },
            "xml": { "name": "Temp" }
        }
    }
}