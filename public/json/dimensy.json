{
  "openapi": "3.0.0",
  "info": {
    "title": "Dimensy API",
    "version": "0.25",
    "x-logo": {
      "url": "/../image/logo.svg",
      "backgroundColor": "#FAFAFA",
      "altText": "Dimensy logo"
    }
  },
  "servers": [
    {
      "url": "https://api.dimensy.id",
      "description": "The production API server",
      "variables": {
        "username": {
          "default": "demo",
          "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
        },
        "port": {
          "enum": [
            "8443",
            "443"
          ],
          "default": "443"
        },
        "basePath": {
          "default": "v1"
        }
      }
    },
    {
      "url": "https://api-sandbox.dimensy.id",
      "description": "The Sandbox API server",
      "variables": {
        "username": {
          "default": "demo",
          "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
        },
        "port": {
          "enum": [
            "8443",
            "443"
          ],
          "default": "443"
        },
        "basePath": {
          "default": "v1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "sign",
      "x-displayName": "Sign Process APIs",
      "description": "All API signature placement process for Dimensy. The APIs are listed in the correct order. Please follow carefully."
    },
    {
      "name": "meterai",
      "x-displayName": "Meterai Process APIs",
      "description": "All API e-meterai placement process for Dimensy. The APIs are listed in the correct order. Please follow carefully."
    },
    {
      "name": "commonProcess",
      "x-displayName": "Common Process APIs",
      "description": "A collection of API utilities to improve user convenience."
    }
  ],
  "x-tagGroups": [
    {
      "name": "API",
      "tags": [
        "sign",
        "meterai",
        "commonProcess"
      ]
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/sendDocument": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Send Document",
        "description": "Initiate the Signing or Stamping process by submitting documents and signature/stamp information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SendDocument"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySend"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/getOtp": {
      "get": {
        "tags": [
          "sign"
        ],
        "summary": "Get OTP",
        "description": "Generate an OTP code and send it to your email and SMS.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/AskDataIDBody"
              },
              "examples": {
                "Sign ID": {
                  "value": {
                    "dataId": "460"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/OTPResponse"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/signing": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Sign Document",
        "description": "Submit the authentication data required to complete document signing.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTP"
              },
              "examples": {
                "First": {
                  "value": {
                    "dataId": "460",
                    "otpCode": "142289",
                    "tokenCode": "84a634929cd04784ac7ac5c158f26a53"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "dataId": 460
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/DocType": {
      "get": {
        "tags": [
          "meterai"
        ],
        "summary": "Document Type",
        "description": "Get document-type information. This type of document is mandatory for the Meterai Placement Process.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/DocumentTypeResponse"
                },
                "examples": {
                  "FirstTypes": {
                    "$ref": "#/components/examples/DocumentTypes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/meteraiSigning": {
      "post": {
        "tags": [
          "meterai"
        ],
        "summary": "Meterai Placement",
        "description": "Implementation of e-Meterai placement by sending documents and e-Meterai position. Unlike the Signing and Stamping process, this process does not require OTP authentication. So, your e-Stamp will be automatically placed upon successful execution of this API.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/MeteraiDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "example": {
                  "code": 0,
                  "dataId": 491,
                  "message": "Success"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/download": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Download Document",
        "description": "Download your finished document. A document can be downloaded if the status is \"COMPLETED\", \"STAMP\", or \"SEALED\"",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/AskDataIDBody"
              },
              "examples": {
                "Sign ID": {
                  "value": {
                    "dataId": "460"
                  }
                },
                "Meterai ID": {
                  "value": {
                    "dataId": "491"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/DownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/getDocument": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Get Documents",
        "description": "Receive document information related to the user. Each document has a status depending on the process of signing, stamping, or e-Meterai.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/GetDocumentResponse"
                },
                "examples": {
                  "FirstResponse": {
                    "$ref": "#/components/examples/DocumentResponseEx"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/quota": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Get Quota Info",
        "description": "This API will display the package, its details, and the remaining quotas of your company. There are 8 types of quota: User, Upload, Storage, Sign, Stamp, Materai, OTP, and Keyla",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/QuotaResponse"
                },
                "examples": {
                  "Dummy Company": {
                    "$ref": "#/components/examples/DummyCompanyPackage"
                  },
                  "Dummy Company 2": {
                    "$ref": "#/components/examples/DummyCompany2Package"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "bodySend": {
        "summary": "Contoh Body",
        "value": {
          "content": {
            "filename": "cobadariAPI.pdf",
            "base64Doc": "JVBERi0xLjcKJaGzxdcKMSAwIG9iago8PC9OYW1lczw8L0Rlc3RzIDQgMCBSID4.....",
            "signer": {
              "lowerLeftX": "307",
              "lowerLeftY": "23",
              "upperRightX": "377",
              "upperRightY": "41",
              "page": "1",
              "location": "Jakarta"
            }
          }
        }
      },
      "DummyCompanyPackage": {
        "value": {
          "code": 0,
          "data": {
            "companyName": "Dummy Company",
            "package": {
              "name": "Paket A",
              "expired": "2021-11-14",
              "detail": [
                {
                  "name": "Stamp",
                  "quota": "100"
                },
                {
                  "name": "OTP",
                  "quota": "295"
                },
                {
                  "name": "Materai",
                  "quota": "88"
                },
                {
                  "name": "Upload",
                  "quota": "5"
                },
                {
                  "name": "User",
                  "quota": "86"
                },
                {
                  "name": "Keyla",
                  "quota": "276"
                },
                {
                  "name": "Sign",
                  "quota": "71"
                },
                {
                  "name": "Storage",
                  "quota": "9.98"
                }
              ]
            }
          },
          "message": "Success"
        }
      },
      "DummyCompany2Package": {
        "value": {
          "code": 0,
          "data": {
            "companyName": "Dummy Company 2",
            "package": {
              "name": "Paket B",
              "expired": "2022-02-28",
              "detail": [
                {
                  "name": "Stamp",
                  "quota": "70"
                },
                {
                  "name": "OTP",
                  "quota": "200"
                },
                {
                  "name": "Materai",
                  "quota": "85"
                },
                {
                  "name": "Upload",
                  "quota": "6"
                },
                {
                  "name": "User",
                  "quota": "40"
                },
                {
                  "name": "Keyla",
                  "quota": "250"
                },
                {
                  "name": "Sign",
                  "quota": "41"
                },
                {
                  "name": "Storage",
                  "quota": "8.21"
                }
              ]
            }
          },
          "message": "Success"
        }
      },
      "DocumentTypes": {
        "value": {
          "code": 0,
          "data": [
            {
              "id": "45b752ce-8844-4486-b648-6da905276bba",
              "nama": "Akta Pejabat"
            },
            {
              "id": "8d6c3260-51d3-43d7-a574-fd326f6a0841",
              "nama": "Surat Berharga"
            },
            {
              "id": "64eac3d0-088d-497d-b5ae-7f42bcd85b6b",
              "nama": "Dokumen Transaksi"
            },
            {
              "id": "fba59e44-72d2-4790-80b7-850aea2c54c4",
              "nama": "Dokumen Lelang"
            },
            {
              "id": "cc64b216-3108-4496-8890-0d585fc31899",
              "nama": "Dokumen pernyataan jumlah uang lebih dari 5jt"
            },
            {
              "id": "8c7f6100-fd8b-4b4a-8356-22a301265614",
              "nama": "Akta Notaris"
            },
            {
              "id": "32208144-45ca-4414-8707-bd6ba6e335c5",
              "nama": "Surat Perjanjian"
            },
            {
              "id": "8e852a7d-231a-4238-8f80-cc34ae97a71c",
              "nama": "Dokumen Lain-lain"
            }
          ],
          "message": "Success"
        }
      },
      "DocumentResponseEx": {
        "value": {
          "code": 0,
          "data": [
            {
              "dataId": 308,
              "fileName": "data.pdf",
              "status": "ONPROGRESS"
            },
            {
              "dataId": 309,
              "fileName": "data.pdf",
              "status": "STAMP"
            },
            {
              "dataId": 325,
              "fileName": "20211101data-single.pdf",
              "status": "DELETED"
            },
            {
              "dataId": 326,
              "fileName": "20211029data-series.pdf",
              "status": "ONPROGRESS"
            },
            {
              "dataId": 329,
              "fileName": "20211104data-single.pdf",
              "status": "COMPLETED"
            },
            {
              "dataId": 374,
              "fileName": "20211109data-paralel.pdf",
              "status": "SEALED"
            }
          ],
          "message": "Success"
        }
      }
    },
    "schemas": {
      "GeneralError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Package": {
        "type": "object",
        "description": "Complete information about your package",
        "properties": {
          "name": {
            "type": "string",
            "description": "Package name"
          },
          "expired": {
            "type": "string",
            "format": "date",
            "description": "Package expiration date"
          },
          "detail": {
            "type": "array",
            "description": "Package details consist of the quota",
            "items": {
              "$ref": "#/components/schemas/Quota"
            }
          }
        },
        "xml": {
          "name": "Package"
        }
      },
      "Quota": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Quota name"
          },
          "quota": {
            "type": "string",
            "description": "Remaining quota quantity"
          }
        },
        "xml": {
          "name": "Quota"
        }
      },
      "Token": {
        "type": "object",
        "description": "Consist of token data required for OTP Process",
        "properties": {
          "token": {
            "type": "string",
            "example": "84a634929cd04784ac7ac5c158f26a53",
            "description": "Automatically generated code to authenticate the signing process"
          },
          "dataId": {
            "type": "integer",
            "format": "int64",
            "example": 460,
            "description": "Document ID"
          }
        }
      },
      "OTP": {
        "type": "object",
        "description": "The OTP Model required for authentication process.",
        "properties": {
          "dataId": {
            "type": "string",
            "description": "Document ID"
          },
          "otpCode": {
            "type": "string",
            "description": "The OTP code required for authentication"
          },
          "tokenCode": {
            "type": "string",
            "description": "The token code acquired from Get OTP API Response"
          }
        },
        "required": [
          "dataId",
          "otpCode",
          "tokenCode"
        ]
      },
      "Document": {
        "type": "object",
        "description": "The Document Model",
        "properties": {
          "filename": {
            "type": "string",
            "description": "File input name. It is recommended to include the file extension."
          },
          "base64doc": {
            "type": "string",
            "description": "The base64 format of the document."
          },
          "signer": {
            "$ref": "#/components/schemas/Signer"
          }
        },
        "required": [
          "filename",
          "base64doc"
        ]
      },
      "DocStatus": {
        "type": "object",
        "properties": {
          "dataId": {
            "type": "integer",
            "format": "int32",
            "description": "Document ID"
          },
          "fileName": {
            "type": "string",
            "example": "data.pdf",
            "description": "File name"
          },
          "status": {
            "type": "string",
            "example": "ONPROGRESS",
            "description": "Document status"
          }
        }
      },
      "Signer": {
        "type": "object",
        "description": "Contains the coordinates of your document's Signature, e-Meterai, or Stamp element.",
        "properties": {
          "lowerLeftX": {
            "type": "string"
          },
          "lowerLeftY": {
            "type": "string"
          },
          "upperRightX": {
            "type": "string"
          },
          "upperRightY": {
            "type": "string"
          },
          "page": {
            "type": "string",
            "description": "The page location of the signature."
          },
          "location": {
            "type": "string",
            "description": "Location of the city where the signature, e-Meterai or stamp is placed."
          }
        },
        "required": [
          "lowerLeftX",
          "lowerLeftY",
          "upperRightX",
          "upperRightY",
          "page"
        ]
      },
      "DocumentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Document type ID. This ID is required for the Meterai Placement API."
          },
          "nama": {
            "type": "string",
            "description": "Document type name"
          }
        }
      }
    },
    "parameters": {
      "skipParam": {
        "name": "skip",
        "in": "query",
        "description": "number of items to skip",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "apiKeyParam": {
        "name": "apiKey",
        "in": "header",
        "description": "API key generated from the dashboard. Each company has a unique API Key. Please don't use other company's API Key as it will cause process failure.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "emailParam": {
        "name": "email",
        "in": "header",
        "description": "Use the email associated with your account.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "email1": {
            "value": "example@email.com",
            "summary": "Sample e-mail format"
          },
          "email2": {
            "value": "example@gmail.com",
            "summary": "Sample google e-mail format"
          }
        }
      }
    },
    "requestBodies": {
      "SendDocument": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "MeteraiDocument": {
        "allOf": [
          {
            "$ref": "#/components/requestBodies/SendDocument"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "type": "object",
                "description": "Request Body Meterai Document",
                "properties": {
                  "noDoc": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Document number. Defined by document content",
                    "default": 1,
                    "minimum": 1
                  },
                  "docpass": {
                    "type": "string",
                    "description": "Document password, if any"
                  },
                  "docType": {
                    "type": "string",
                    "description": "Document type ID acquired from Document Type API"
                  }
                },
                "required": [
                  "noDoc",
                  "docpass",
                  "docType"
                ]
              }
            }
          }
        ]
      },
      "AskDataIDBody": {
        "type": "object",
        "properties": {
          "dataId": {
            "type": "string",
            "description": "Document ID"
          }
        },
        "required": [
          "dataId"
        ]
      }
    },
    "response": {
      "NotFound": {
        "description": "Entity not found."
      },
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "GeneralError": {
        "description": "General Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralError"
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 200,
            "description": "Response code"
          },
          "message": {
            "type": "string",
            "example": "Process Successful",
            "description": "The response message"
          }
        }
      },
      "ApiResponseDataId": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "dataId": {
                "type": "integer",
                "format": "int32",
                "description": "Response ID"
              }
            }
          }
        ]
      },
      "ApiResponseFail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 400,
            "description": "Response code"
          },
          "dataId": {
            "type": "integer",
            "format": "int32",
            "description": "Response ID"
          },
          "message": {
            "type": "string",
            "example": "Process Unsuccessful",
            "description": "The response message"
          }
        }
      },
      "QuotaResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Response data",
                "properties": {
                  "companyName": {
                    "type": "string",
                    "description": "The company name"
                  },
                  "package": {
                    "$ref": "#/components/schemas/Package"
                  }
                }
              }
            }
          }
        ]
      },
      "GetDocumentResponse": {
        "description": "Response for Get Document",
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "description": "List of all available documents related to your account",
                "items": {
                  "$ref": "#/components/schemas/DocStatus"
                }
              }
            }
          }
        ]
      },
      "DocumentTypeResponse": {
        "description": "Response for Document Type",
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "description": "List of all available document types",
                "items": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            }
          }
        ]
      },
      "DownloadResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Response data",
                "properties": {
                  "base64document": {
                    "type": "string",
                    "description": "Received document in base64 format",
                    "example": "JVBERi0xLjYKJeLjz9MKMiAwIG9iago8PC9Db2xvclNwYWNlL0RldmljZUdyYXkvU3VidHlwZS9JbWFnZS9IZWlnaH..."
                  }
                }
              }
            }
          }
        ]
      },
      "OTPResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 200,
            "description": "Response code"
          },
          "data": {
            "$ref": "#/components/schemas/Token"
          }
        }
      }
    }
  }
}