{
  "openapi": "3.0.0",
  "info": {
    "title": "Dimensy API",
    "version": "0.3",
    "x-logo": {
      "url": "/../image/logo.svg",
      "backgroundColor": "#FAFAFA",
      "altText": "Dimensy logo"
    }
  },
  "servers": [
    {
      "url": "https://api.dimensy.id",
      "description": "The production API server",
      "variables": {
        "username": {
          "default": "demo",
          "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
        },
        "port": {
          "enum": [
            "8443",
            "443"
          ],
          "default": "443"
        },
        "basePath": {
          "default": "v1"
        }
      }
    },
    {
      "url": "https://api-sandbox.dimensy.id",
      "description": "The Sandbox API server",
      "variables": {
        "username": {
          "default": "demo",
          "description": "this value is assigned by the service provider, in this example `gigantic-server.com`"
        },
        "port": {
          "enum": [
            "8443",
            "443"
          ],
          "default": "443"
        },
        "basePath": {
          "default": "v1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "register",
      "x-displayName": "Register Process APIs",
      "description": "All API required to Register in Dimensy."
    },
    {
      "name": "sign",
      "x-displayName": "Sign Process APIs",
      "description": "All API signature placement processes for Dimensy. There are 3 types of signature placement: Single, Serial, and Parallel. The APIs are listed in the correct order. Please follow carefully."
    },
    {
      "name": "stamp",
      "x-displayName": "Stamp Process APIs",
      "description": "All API stamp placement processes for Dimensy. The APIs are listed in the correct order. Please follow carefully."
    },
    {
      "name": "meterai",
      "x-displayName": "Meterai Process APIs",
      "description": "All API e-meterai placement processes for Dimensy. The APIs are listed in the correct order. Please follow carefully."
    },
    {
      "name": "keyla",
      "x-displayName": "KEYLA APIs",
      "description": "All APIs regarding KEYLA information and activation."
    },
    {
      "name": "renewalCA",
      "x-displayName": "CA Renewal APIs",
      "description": "All APIs required to renew Certificate Authority (CA)."
    },
    {
      "name": "commonProcess",
      "x-displayName": "Common Process APIs",
      "description": "A collection of API utilities to improve user convenience."
    }
  ],
  "x-tagGroups": [
    {
      "name": "API",
      "tags": [
        "register",
        "sign",
        "stamp",
        "meterai",
        "keyla",
        "renewalCA",
        "commonProcess"
      ]
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": [
          "register"
        ],
        "summary": "User Register",
        "description": "The registration process for new users on Dimensy.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/UserBody"
              },
              "examples": {
                "User 1": {
                  "$ref": "#/components/examples/bodyUserOne"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Registration Successful! Please check your email for activation process."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/verification": {
      "post": {
        "tags": [
          "register"
        ],
        "summary": "Video Verification",
        "description": "The verification process for newly registered users on Dimensy. Note that videos will be sent in base64 format without MIME and the system can only accept video formats with H.264 and WEBM codecs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "base64video": {
                    "type": "string",
                    "format": "base64",
                    "description": "Video in base64 format. The system can only accept video formats with H.264 and WEBM codecs."
                  }
                }
              },
              "examples": {
                "Video 1": {
                  "value": {
                    "base64video": "GkXfo59ChoEBQveBAULygQRC84EIQoKEd2Vibâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "E-KYC Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/sendDocument": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Send Document",
        "description": "Initiate the Signing process by submitting documents and signature information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SendDocument"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySend"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/signing": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Sign Document",
        "operationId": "signing",
        "description": "Submit the authentication data required to complete document signing. To run this API, The <a href='/#operation/getOtp'>OTP API</a> needs to be executed first.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTP"
              },
              "examples": {
                "First": {
                  "value": {
                    "dataId": "460",
                    "otpCode": "142289",
                    "tokenCode": "84a634929cd04784ac7ac5c158f26a53"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "dataId": 460
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/sendDocumentSerial": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Send Serial Document",
        "description": "Initiate the Serial Signing process by submitting documents and signers information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SendSerialDocument"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySendSerial"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/setSignatureSerial": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Set Serial Sign Document",
        "description": "Set the sign coordinates for serial signing in Dimensy.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SetSignatureBody"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySetSignature"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/signingSerial": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Sign Serial Document",
        "operationId": "signingSerial",
        "description": "Submit the authentication data required to complete document signing. To run this API, The <a href='/#operation/getOtp'>OTP API</a> needs to be executed first.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTP"
              },
              "examples": {
                "First": {
                  "value": {
                    "dataId": "460",
                    "otpCode": "142289",
                    "tokenCode": "84a634929cd04784ac7ac5c158f26a53"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "dataId": 460
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/sendDocumentParalel": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Send Paralel Document",
        "description": "Initiate the Paralel Signing process by submitting documents and signers information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SendSerialDocument"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySendSerial"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/setSignatureParalel": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Set Paralel Sign Document",
        "description": "Set the sign coordinates for paralel signing in Dimensy.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SetSignatureBody"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySetSignature"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/signingParalel": {
      "post": {
        "tags": [
          "sign"
        ],
        "summary": "Sign Paralel Document",
        "operationId": "signingParalel",
        "description": "Submit the authentication data required to complete document signing. To run this API, The <a href='/#operation/getOtp'>OTP API</a> needs to be executed first.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTP"
              },
              "examples": {
                "First": {
                  "value": {
                    "dataId": "460",
                    "otpCode": "142289",
                    "tokenCode": "84a634929cd04784ac7ac5c158f26a53"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "dataId": 460
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/sendStamp": {
      "post": {
        "tags": [
          "stamp"
        ],
        "summary": "Send Stamp",
        "description": "Initiate the Stamping process by submitting documents and stamp information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/SendStamp"
              },
              "examples": {
                "Send1": {
                  "$ref": "#/components/examples/bodySend"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "dataId": 460,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/signingStamp": {
      "post": {
        "tags": [
          "stamp"
        ],
        "summary": "Stamp Document",
        "operationId": "stamping",
        "description": "Submit the authentication data required to complete document stamping. To run this API, The <a href='/#operation/getOtp'>OTP API</a> needs to be executed first.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTP"
              },
              "examples": {
                "First": {
                  "value": {
                    "dataId": "460",
                    "otpCode": "142289",
                    "tokenCode": "84a634929cd04784ac7ac5c158f26a53"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "dataId": 460
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/checkKeyla": {
      "get": {
        "tags": [
          "keyla"
        ],
        "summary": "Check KEYLA",
        "description": "Check if the user is registered in the KEYLA system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/registerKeyla": {
      "get": {
        "tags": [
          "keyla"
        ],
        "summary": "Register KEYLA",
        "description": "Register the active user in the KEYLA system.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/KeylaResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Success",
                      "qrCode": "JVBERi0xLjYKJeLjz9MKMiAwIG9iago8PC9Db2xvclNwYWNlL0RldmljZUdyYXkvU3VidHlwZS9JbWFnZS9IZWlnaH..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificate": {
      "get": {
        "tags": [
          "renewalCA"
        ],
        "summary": "Check CA",
        "description": "check your CA's valid time.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/CertificateResponse"
                },
                "examples": {
                  "Not expired": {
                    "value": {
                      "code": 0,
                      "data": {
                        "isExpired": "Certificate validity period >= 30 days"
                      },
                      "message": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/renewal": {
      "post": {
        "tags": [
          "renewalCA"
        ],
        "summary": "CA Renewal",
        "description": "Verification process to renew your CA in Dimensy.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "base64video": {
                    "type": "string",
                    "format": "base64"
                  }
                }
              },
              "examples": {
                "Video 1": {
                  "value": {
                    "base64video": "GkXfo59ChoEBQveBAULygQRC84EIQoKEd2Vibâ€¦"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponse"
                },
                "examples": {
                  "Success": {
                    "value": {
                      "code": 0,
                      "message": "Renewal Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/DocType": {
      "get": {
        "tags": [
          "meterai"
        ],
        "summary": "Document Type",
        "description": "Get document-type information. This type of document is mandatory for the Meterai Placement Process.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/DocumentTypeResponse"
                },
                "examples": {
                  "FirstTypes": {
                    "$ref": "#/components/examples/DocumentTypes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/meteraiSigning": {
      "post": {
        "tags": [
          "meterai"
        ],
        "summary": "Meterai Placement",
        "description": "Implementation of e-Meterai placement by sending documents and e-Meterai position. Unlike the Signing and Stamping process, this process does not require OTP authentication. So, your e-Stamp will be automatically placed upon successful execution of this API.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/MeteraiDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseDataId"
                },
                "example": {
                  "code": 0,
                  "dataId": 491,
                  "message": "Success"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/getOtp": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Get OTP",
        "operationId": "getOtp",
        "description": "Generate an OTP code and send it to your email and SMS. After OTP, user can execute one of the signing process below in accordance to the ongoing process: <ul> <li><a href='/#operation/signing'>Single Signing</a></li> <li><a href='/#operation/signingSerial'>Serial Signing</a></li> <li><a href='/#operation/signingParalel'>Paralel Signing</a></li> <li><a href='/#operation/stamping'>Stamping</a></li> </ul>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/AskDataIDBody"
              },
              "examples": {
                "Sign ID": {
                  "value": {
                    "dataId": "460"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/OTPResponse"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/download": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Download Document",
        "description": "Download your finished document. A document can be downloaded if the status is \"COMPLETED\", \"STAMP\", or \"SEALED\"",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/requestBodies/AskDataIDBody"
              },
              "examples": {
                "Sign ID": {
                  "value": {
                    "dataId": "460"
                  }
                },
                "Meterai ID": {
                  "value": {
                    "dataId": "491"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/DownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/getDocument": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Get Documents",
        "description": "Receive document information related to the user. Each document has a status depending on the process of signing, stamping, or e-Meterai.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/GetDocumentResponse"
                },
                "examples": {
                  "FirstResponse": {
                    "$ref": "#/components/examples/DocumentResponseEx"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    },
    "/api/quota": {
      "get": {
        "tags": [
          "commonProcess"
        ],
        "summary": "Get Quota Info",
        "description": "This API will display the package, its details, and the remaining quotas of your company. There are 8 types of quota: User, Upload, Storage, Sign, Stamp, Materai, OTP, and Keyla",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/apiKeyParam"
          },
          {
            "$ref": "#/components/parameters/emailParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/QuotaResponse"
                },
                "examples": {
                  "Dummy Company": {
                    "$ref": "#/components/examples/DummyCompanyPackage"
                  },
                  "Dummy Company 2": {
                    "$ref": "#/components/examples/DummyCompany2Package"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/ApiResponseFail"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "bodyUserOne": {
        "value": {
          "name": "User",
          "nik": "3171231234533456",
          "npwp": "",
          "pob": "Jakarta",
          "dob": "1990-12-13",
          "phone": "0822123329999",
          "address": "Jalan Haji Sulaiman nomor 90",
          "city": "Jakarta Timur",
          "prov": "DKI Jakarta",
          "email": "silver8@yopmail.com",
          "password": "P@ssw0rd",
          "fotoKtp": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAA..",
          "fotoNpwp": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAA.."
        }
      },
      "bodySendSerial": {
        "value": {
          "content": {
            "filename": "cobaApiSerial.pdf",
            "base64Doc": "JVBERi0xLjcKJaGzxdcKMSAwIG9iago8PC9OYW1lczw8...",
            "signer": [
              {
                "emailSigner": "pic.silver@yopmail.com"
              },
              {
                "emailSigner": "keuangan.silver@yopmail.com"
              }
            ]
          }
        }
      },
      "bodySend": {
        "summary": "Contoh Body",
        "value": {
          "content": {
            "filename": "cobadariAPI.pdf",
            "base64Doc": "JVBERi0xLjcKJaGzxdcKMSAwIG9iago8PC9OYW1lczw8L0Rlc3RzIDQgMCBSID4.....",
            "signer": {
              "lowerLeftX": "307",
              "lowerLeftY": "23",
              "upperRightX": "377",
              "upperRightY": "41",
              "page": "1",
              "location": "Jakarta"
            }
          }
        }
      },
      "DummyCompanyPackage": {
        "value": {
          "code": 0,
          "data": {
            "companyName": "Dummy Company",
            "package": {
              "name": "Paket A",
              "expired": "2021-11-14",
              "detail": [
                {
                  "name": "Stamp",
                  "quota": "100"
                },
                {
                  "name": "OTP",
                  "quota": "295"
                },
                {
                  "name": "Materai",
                  "quota": "88"
                },
                {
                  "name": "Upload",
                  "quota": "5"
                },
                {
                  "name": "User",
                  "quota": "86"
                },
                {
                  "name": "Keyla",
                  "quota": "276"
                },
                {
                  "name": "Sign",
                  "quota": "71"
                },
                {
                  "name": "Storage",
                  "quota": "9.98"
                }
              ]
            }
          },
          "message": "Success"
        }
      },
      "DummyCompany2Package": {
        "value": {
          "code": 0,
          "data": {
            "companyName": "Dummy Company 2",
            "package": {
              "name": "Paket B",
              "expired": "2022-02-28",
              "detail": [
                {
                  "name": "Stamp",
                  "quota": "70"
                },
                {
                  "name": "OTP",
                  "quota": "200"
                },
                {
                  "name": "Materai",
                  "quota": "85"
                },
                {
                  "name": "Upload",
                  "quota": "6"
                },
                {
                  "name": "User",
                  "quota": "40"
                },
                {
                  "name": "Keyla",
                  "quota": "250"
                },
                {
                  "name": "Sign",
                  "quota": "41"
                },
                {
                  "name": "Storage",
                  "quota": "8.21"
                }
              ]
            }
          },
          "message": "Success"
        }
      },
      "DocumentTypes": {
        "value": {
          "code": 0,
          "data": [
            {
              "id": "45b752ce-8844-4486-b648-6da905276bba",
              "nama": "Akta Pejabat"
            },
            {
              "id": "8d6c3260-51d3-43d7-a574-fd326f6a0841",
              "nama": "Surat Berharga"
            },
            {
              "id": "64eac3d0-088d-497d-b5ae-7f42bcd85b6b",
              "nama": "Dokumen Transaksi"
            },
            {
              "id": "fba59e44-72d2-4790-80b7-850aea2c54c4",
              "nama": "Dokumen Lelang"
            },
            {
              "id": "cc64b216-3108-4496-8890-0d585fc31899",
              "nama": "Dokumen pernyataan jumlah uang lebih dari 5jt"
            },
            {
              "id": "8c7f6100-fd8b-4b4a-8356-22a301265614",
              "nama": "Akta Notaris"
            },
            {
              "id": "32208144-45ca-4414-8707-bd6ba6e335c5",
              "nama": "Surat Perjanjian"
            },
            {
              "id": "8e852a7d-231a-4238-8f80-cc34ae97a71c",
              "nama": "Dokumen Lain-lain"
            }
          ],
          "message": "Success"
        }
      },
      "DocumentResponseEx": {
        "value": {
          "code": 0,
          "data": [
            {
              "dataId": 308,
              "fileName": "data.pdf",
              "status": "ONPROGRESS"
            },
            {
              "dataId": 309,
              "fileName": "data.pdf",
              "status": "STAMP"
            },
            {
              "dataId": 325,
              "fileName": "20211101data-single.pdf",
              "status": "DELETED"
            },
            {
              "dataId": 326,
              "fileName": "20211029data-series.pdf",
              "status": "ONPROGRESS"
            },
            {
              "dataId": 329,
              "fileName": "20211104data-single.pdf",
              "status": "COMPLETED"
            },
            {
              "dataId": 374,
              "fileName": "20211109data-paralel.pdf",
              "status": "SEALED"
            }
          ],
          "message": "Success"
        }
      },
      "bodySetSignature": {
        "value": {
          "setSignature": {
            "dataId": "654",
            "signers": [
              {
                "lowerLeftX": "307",
                "lowerLeftY": "23",
                "upperRightX": "377",
                "upperRightY": "41",
                "page": "1",
                "location": "Jakarta"
              }
            ]
          }
        }
      }
    },
    "schemas": {
      "GeneralError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/requestBodies/UserBody"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            },
            "xml": {
              "name": "User"
            }
          }
        ]
      },
      "Package": {
        "type": "object",
        "description": "Complete information about your package",
        "properties": {
          "name": {
            "type": "string",
            "description": "Package name"
          },
          "expired": {
            "type": "string",
            "format": "date",
            "description": "Package expiration date"
          },
          "detail": {
            "type": "array",
            "description": "Package details consist of the quota",
            "items": {
              "$ref": "#/components/schemas/Quota"
            }
          }
        },
        "xml": {
          "name": "Package"
        }
      },
      "Quota": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Quota name"
          },
          "quota": {
            "type": "string",
            "description": "Remaining quota quantity"
          }
        },
        "xml": {
          "name": "Quota"
        }
      },
      "Token": {
        "type": "object",
        "description": "Consist of token data required for OTP Process",
        "properties": {
          "token": {
            "type": "string",
            "example": "84a634929cd04784ac7ac5c158f26a53",
            "description": "Automatically generated code to authenticate the signing process"
          },
          "dataId": {
            "type": "integer",
            "format": "int64",
            "example": 460,
            "description": "Document ID"
          }
        }
      },
      "OTP": {
        "type": "object",
        "description": "The OTP Model required for authentication process.",
        "properties": {
          "dataId": {
            "type": "string",
            "description": "Document ID"
          },
          "otpCode": {
            "type": "string",
            "description": "The OTP code required for authentication"
          },
          "tokenCode": {
            "type": "string",
            "description": "The token code acquired from Get OTP API Response"
          }
        },
        "required": [
          "dataId",
          "otpCode",
          "tokenCode"
        ]
      },
      "Document": {
        "type": "object",
        "description": "The Document Model",
        "properties": {
          "filename": {
            "type": "string",
            "description": "File input name. It is recommended to include the file extension."
          },
          "base64Doc": {
            "type": "string",
            "format": "base64",
            "description": "The base64 format of the document."
          },
          "signer": {
            "$ref": "#/components/schemas/Signer"
          }
        },
        "required": [
          "filename",
          "base64Doc"
        ]
      },
      "DocStatus": {
        "type": "object",
        "properties": {
          "dataId": {
            "type": "integer",
            "format": "int32",
            "description": "Document ID"
          },
          "fileName": {
            "type": "string",
            "example": "data.pdf",
            "description": "File name"
          },
          "status": {
            "type": "string",
            "example": "ONPROGRESS",
            "description": "Document status"
          }
        }
      },
      "Signer": {
        "type": "object",
        "description": "Contains the coordinates of your document's Signature, e-Meterai, or Stamp element.",
        "properties": {
          "lowerLeftX": {
            "type": "string"
          },
          "lowerLeftY": {
            "type": "string"
          },
          "upperRightX": {
            "type": "string"
          },
          "upperRightY": {
            "type": "string"
          },
          "page": {
            "type": "string",
            "description": "The page location of the signature."
          },
          "location": {
            "type": "string",
            "description": "Location of the city where the signature, e-Meterai or stamp is placed."
          }
        },
        "required": [
          "lowerLeftX",
          "lowerLeftY",
          "upperRightX",
          "upperRightY",
          "page"
        ]
      },
      "DocumentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Document type ID. This ID is required for the Meterai Placement API."
          },
          "nama": {
            "type": "string",
            "description": "Document type name"
          }
        }
      }
    },
    "parameters": {
      "skipParam": {
        "name": "skip",
        "in": "query",
        "description": "number of items to skip",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "apiKeyParam": {
        "name": "apiKey",
        "in": "header",
        "description": "API key generated from the dashboard. Each company has a unique API Key. Please don't use other company's API Key as it will cause process failure.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "emailParam": {
        "name": "email",
        "in": "header",
        "description": "Use the email associated with your account.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "email1": {
            "value": "example@email.com",
            "summary": "Sample e-mail format"
          },
          "email2": {
            "value": "example@gmail.com",
            "summary": "Sample google e-mail format"
          }
        }
      }
    },
    "requestBodies": {
      "SendDocument": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "MeteraiDocument": {
        "allOf": [
          {
            "$ref": "#/components/requestBodies/SendDocument"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "type": "object",
                "description": "Request Body Meterai Document",
                "properties": {
                  "noDoc": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Document number. Defined by document content",
                    "default": 1,
                    "minimum": 1
                  },
                  "docpass": {
                    "type": "string",
                    "description": "Document password, if any"
                  },
                  "docType": {
                    "type": "string",
                    "description": "Document type ID acquired from Document Type API"
                  }
                },
                "required": [
                  "noDoc",
                  "docpass",
                  "docType"
                ]
              }
            }
          }
        ]
      },
      "AskDataIDBody": {
        "type": "object",
        "properties": {
          "dataId": {
            "type": "string",
            "description": "Document ID"
          }
        },
        "required": [
          "dataId"
        ]
      },
      "UserBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full name"
          },
          "nik": {
            "type": "string",
            "minLength": 16,
            "maxLength": 16,
            "description": "National ID number/KTP number"
          },
          "npwp": {
            "type": "string",
            "minLength": 15,
            "maxLength": 15,
            "description": "NPWP Number"
          },
          "pob": {
            "type": "string",
            "description": "Place of Birth"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "description": "Date of Birth. Please use the YYYY-MM-DD format"
          },
          "phone": {
            "type": "string",
            "minLength": 9,
            "maxLength": 13,
            "description": "Phone number"
          },
          "address": {
            "type": "string",
            "description": "Home Address"
          },
          "city": {
            "type": "string",
            "description": "City related to the address"
          },
          "prov": {
            "type": "string",
            "description": "Province related to the address"
          },
          "email": {
            "type": "string",
            "description": "New user's email"
          },
          "password": {
            "type": "string",
            "description": "New user's password. A password must have at least one digit number, one digit uppercase and contain at least this !@#$%^&* character."
          },
          "fotoKtp": {
            "type": "string",
            "format": "base64",
            "description": "Picture of the new user's KTP/ID card"
          },
          "fotoNpwp": {
            "type": "string",
            "format": "base64",
            "description": "Picture of the new user's NPWP card"
          }
        },
        "required": [
          "name",
          "nik",
          "pob",
          "dob",
          "phone",
          "address",
          "city",
          "prov",
          "email",
          "password",
          "fotoKtp"
        ]
      },
      "SendSerialDocument": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "description": "File input name. It is recommended to include the file extension."
              },
              "base64Doc": {
                "type": "string",
                "format": "base64",
                "description": "The base64 format of the document."
              },
              "signers": {
                "type": "array",
                "description": "List of the signer's emails",
                "items": {
                  "type": "object",
                  "properties": {
                    "emailSigner": {
                      "type": "string",
                      "description": "The signer's email"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SetSignatureBody": {
        "type": "object",
        "properties": {
          "setSignature": {
            "type": "object",
            "properties": {
              "dataId": {
                "type": "integer",
                "format": "int32",
                "description": "Response ID"
              },
              "signers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Signer"
                }
              }
            }
          }
        }
      },
      "SendStamp": {
        "type": "object",
        "properties": {
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Document"
              },
              {
                "type": "object",
                "properties": {
                  "signer": {
                    "type": "object",
                    "properties": {
                      "reason": {
                        "type": "string",
                        "description": "The user's needs by stamping this document"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "response": {
      "NotFound": {
        "description": "Entity not found."
      },
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "GeneralError": {
        "description": "General Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralError"
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 200,
            "description": "Response code"
          },
          "message": {
            "type": "string",
            "example": "Process Successful",
            "description": "The response message"
          }
        }
      },
      "ApiResponseDataId": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "dataId": {
                "type": "integer",
                "format": "int32",
                "description": "Response ID"
              }
            }
          }
        ]
      },
      "ApiResponseFail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 400,
            "description": "Response code"
          },
          "dataId": {
            "type": "integer",
            "format": "int32",
            "description": "Response ID"
          },
          "message": {
            "type": "string",
            "example": "Process Unsuccessful",
            "description": "The response message"
          }
        }
      },
      "QuotaResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Response data",
                "properties": {
                  "companyName": {
                    "type": "string",
                    "description": "The company name"
                  },
                  "package": {
                    "$ref": "#/components/schemas/Package"
                  }
                }
              }
            }
          }
        ]
      },
      "GetDocumentResponse": {
        "description": "Response for Get Document",
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "description": "List of all available documents related to your account",
                "items": {
                  "$ref": "#/components/schemas/DocStatus"
                }
              }
            }
          }
        ]
      },
      "DocumentTypeResponse": {
        "description": "Response for Document Type",
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "description": "List of all available document types",
                "items": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            }
          }
        ]
      },
      "DownloadResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Response data",
                "properties": {
                  "base64document": {
                    "type": "string",
                    "format": "base64",
                    "description": "Received document in base64 format",
                    "example": "JVBERi0xLjYKJeLjz9MKMiAwIG9iago8PC9Db2xvclNwYWNlL0RldmljZUdyYXkvU3VidHlwZS9JbWFnZS9IZWlnaH..."
                  }
                }
              }
            }
          }
        ]
      },
      "OTPResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 200,
            "description": "Response code"
          },
          "data": {
            "$ref": "#/components/schemas/Token"
          }
        }
      },
      "CertificateResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "description": "Response data",
                "properties": {
                  "isExpired": {
                    "type": "string",
                    "description": "Information on your CA validity period"
                  }
                }
              }
            }
          }
        ]
      },
      "KeylaResponse": {
        "allOf": [
          {
            "$ref": "#/components/response/ApiResponse"
          },
          {
            "type": "object",
            "properties": {
              "qrCode": {
                "type": "string",
                "format": "base64",
                "description": "Received QR Code in base64 format",
                "example": "JVBERi0xLjYKJeLjz9MKMiAwIG9iago8PC9Db2xvclNwYWNlL0RldmljZUdyYXkvU3VidHlwZS9JbWFnZS9IZWlnaH..."
              }
            }
          }
        ]
      }
    }
  }
}