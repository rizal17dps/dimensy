---
openapi: 3.0.0

info:
  title: Dimensy API
  version: '0.2'
  x-logo:
    url: "/../image/logo.svg"
    backgroundColor: "#FAFAFA"
    altText: Dimensy logo

servers:
- url: https://api.dimensy.id
  description: The production API server
  variables:
    username:
      default: demo
      description: this value is assigned by the service provider, in this example
        `gigantic-server.com`
    port:
      enum:
      - '8443'
      - '443'
      default: '443'
    basePath:
      default: v1
- url: https://api-sandbox.dimensy.id
  description: The Sandbox API server
  variables:
    username:
      default: demo
      description: this value is assigned by the service provider, in this example
        `gigantic-server.com`
    port:
      enum:
      - '8443'
      - '443'
      default: '443'
    basePath:
      default: v1

# tags:
#   - name : apis
#     x-displayName: API Lists
#   - name : package_model
#     x-displayName: The Package Model
#     description: |
#       <SchemaDefinition schemaRef="#/components/schemas/Package" />
#   - name : document_model
#     x-displayName: The Document Model
#     description: |
#       <SchemaDefinition schemaRef="#/components/schemas/Document" />

# x-tagGroups:
#   - name: API
#     tags:
#       - apis
#   - name: Models
#     tags:
#       - package_model
#       - document_model

schemes:
- https
- http

paths:        
  "/api/getDocument":
    get:
      # tags :
      # - apis
      summary: Get Documents
      description: Receive document information related to the user. 
        Each document has a status depending on the signing process.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetDocument"
              example:
                code: 0
                data:
                - dataId: 308
                  fileName: data.pdf
                  status: ONPROGRESS
                - dataId: 309
                  fileName: data.pdf
                  status: STAMP
                - dataId: 325
                  fileName: 20211101data-single.pdf
                  status: DELETED
                - dataId: 326
                  fileName: 20211029data-series.pdf
                  status: ONPROGRESS
                - dataId: 329
                  fileName: 20211104data-single.pdf
                  status: COMPLETED
                - dataId: 374
                  fileName: 20211109data-paralel.pdf
                  status: SEALED
                message: Success
          
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/getOtp":
    get:
      # tags :
      # - apis
      summary: Get OTP
      description: Generating the OTP code and send it to your e-mail and SMS.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dataId:
                  type: string
                  example: '1028440'
                  description: The document ID
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                    description: Response code
                  data:
                    "$ref": "#/components/schemas/OTP"
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/signing":
    post:
      # tags :
      # - apis
      summary: Sign Document
      description: Send the authorization data required to authenticate the signing of the document.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dataId:
                  type: string
                  description: The Document ID
                otpCode:
                  type: string
                  description: The OTP code required for authentication
                tokenCode:
                  type: string
                  description: The token code acquired from Get OTP API Response
            examples:
              First:
                value:
                  dataId: '1028440'
                  otpCode: "142289"
                  tokenCode:  "84a634929cd04784ac7ac5c158f26a53"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ApiResponse" 
                - type : object
                  properties:
                    dataId:
                      type: integer
                      format: int32
                      description: Response ID
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/sendDocument":
    post:
      # tags :
      # - apis
      summary: Send Document
      description: Receive Signed Document from user and submit it to our system and the PERURI system to finalize the newly-placed signature.
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      consumes:
      - application/json
      produces:
      - application/json
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Document"
            examples:
              Send1:
                $ref : "#/components/examples/bodySend"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ApiResponse" 
                - type : object
                  properties:
                    dataId:
                      type: integer
                      format: int32
                      description: Response ID
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/DocType":
    get:
      # tags :
      # - apis
      summary: Document Type
      description: Get document type information. This document type is mandatory for the Meterai Placement Process.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : "#/components/schemas/DocumentTypeResponse"
              example:
                code: 0
                data:
                - id: 45b752ce-8844-4486-b648-6da905276bba
                  nama: Akta Pejabat
                - id: 8d6c3260-51d3-43d7-a574-fd326f6a0841
                  nama: Surat Berharga
                - id: 64eac3d0-088d-497d-b5ae-7f42bcd85b6b
                  nama: Dokumen Transaksi
                - id: fba59e44-72d2-4790-80b7-850aea2c54c4
                  nama: Dokumen Lelang
                - id: cc64b216-3108-4496-8890-0d585fc31899
                  nama: Dokumen pernyataan jumlah uang lebih dari 5jt
                - id: 8c7f6100-fd8b-4b4a-8356-22a301265614
                  nama: Akta Notaris
                - id: 32208144-45ca-4414-8707-bd6ba6e335c5
                  nama: Surat Perjanjian
                - id: 8e852a7d-231a-4238-8f80-cc34ae97a71c
                  nama: Dokumen Lain-lain
                message: Success
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/meteraiSigning":
    post:
      # tags :
      # - apis
      summary: Meterai Placement
      description: Receive Finished Document from user and submit it to our system and the PERURI system to finalize the newly-placed e-Meterai.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MeteraiDocument"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ApiResponse" 
                - type : object
                  properties:
                    dataId:
                      type: integer
                      format: int32
                      description: Response ID
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"

  "/api/download":
    get:
      # tags :
      # - apis
      summary: Download Document
      description: Download your finished document. 
        A document can be downloaded if it has the status "COMPLETED", "STAMP", or "SEALED"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'  
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dataId:
                  type: string
                  example: '491'
                  description: The Document ID
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/ApiResponse" 
                - type : object
                  properties:
                    data:
                      type: object
                      description: Response data
                      properties:
                        base64document:
                          type: string
                          description: the document received in base64 format
                          example: JVBERi0xLjYKJeLjz9MKMiAwIG9iago8PC9Db2xvclNwYWNlL0RldmljZUdyYXkvU3VidHlwZS9JbWFnZS9IZWlnaH...
                  
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"
  "/api/quota":
    get:
      # tags :
      # - apis
      summary: Get Quota Info
      description: "This API will display the package, its details, and remaining quotas of your company. 
        There are 8 types of quota : User, Upload, Storage, Sign, Stamp, Materai, OTP, and Keyla"
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - $ref: '#/components/parameters/apiKeyParam'
      - $ref: '#/components/parameters/emailParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuotaResponse"
              examples:
                Dummy Company:
                  $ref: "#/components/examples/DummyCompanyPackage"
                Dummy Company 2:
                  $ref: "#/components/examples/DummyCompany2Package"
                
        '400':
          description: unsuccessful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApiResponseFail"

components:
  examples:
    VehicleStoreEx1:
      summary: VehicleStoreEx1
      value:
        name: vehicle 1
    VehicleStoreEx2:
      summary: VehicleStoreEx2
      value:
        name: vehicle 1
        model: Tesla
    bodySend:
      summary: Contoh Body
      value:
        content:
          filename: cobadariAPI.pdf
          base64Doc: JVBERi0xLjcKJaGzxdcKMSAwIG9iago8PC9OYW1lczw8L0Rlc3RzIDQgMCBSID4.....
          signer:
            lowerLeftX: '307'
            lowerLeftY: '23'
            upperRightX: '377'
            upperRightY: '41'
            page: '1'
            location: Jakarta
    DummyCompanyPackage:
      value:
        code: 0
        data:
          companyName: Dummy Company
          package:
            name: Paket A
            expired: '2021-11-14'
            detail:
            - name: Stamp
              quota: '100'
            - name: OTP
              quota: '295'
            - name: Materai
              quota: '88'
            - name: Upload
              quota: '5'
            - name: User
              quota: '86'
            - name: Keyla
              quota: '276'
            - name: Sign
              quota: '71'
            - name: Storage
              quota: '9.98'
        message: Success
    DummyCompany2Package:
      value:
        code: 0
        data:
          companyName : Dummy Company 2
          package :
            name : Paket B
            expired : "2022-02-28"
            detail :
            - name: Stamp
              quota: '70'
            - name: OTP
              quota: '200'
            - name: Materai
              quota: '85'
            - name: Upload
              quota: '6'
            - name: User
              quota: '40'
            - name: Keyla
              quota: '250'
            - name: Sign
              quota: '41'
            - name: Storage
              quota: '8.21'
        message : Success
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
          description: Response code
        message:
          type: string
          example: Process Successful
          description: The response message
    ApiResponseFail:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 400
          description: Response code
        dataId:
          type: integer
          format: int32
          description: Response ID
        message:
          type: string
          example: Process Unsuccessful
          description: The response message
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    Token:
      type: object
      properties:
        code:
          type: integer
          format: int32
        token:
          type: string
    QuotaResponse:
      allOf:
      - "$ref": "#/components/schemas/ApiResponse" 
      - type : object
        properties:
          data:
            type: object
            description: Response data
            properties:
              companyName:
                type: string
                description: The company name
              package:
                "$ref": "#/components/schemas/Package"
    Package:
      type: object
      description: All information of your package
      properties:
        name:
          type: string
          description: The package name
        expired:
          type: string
          format: date
          description: The package expiration date
        detail:
          type: array
          description: The package details consist of its quotas
          items:
            "$ref": "#/components/schemas/Quota"
      xml:
        name: Package
    Quota:
      type: object
      properties:
        name:
          type: string
          description: The quota name
        quota:
          type: string
          description: The remaining quota quantities
      xml:
        name: Quota
    OTP:
      type: object
      description: Consist of data that will be passed to Sign Document API
      properties:
        token:
          type: string
          example: 84a634929cd04784ac7ac5c158f26a53
          description: Automatically generated code to authenticate the signing process
        dataId:
          type: integer
          format: int64
          example: 1028440
          description: The document ID
    Document:
      type: object
      properties:
        content:
          type: object
          description: The Document Model
          properties:
            filename:
              type: string
              required: True
              description: The name of the file inputted. It is advised to include the file extension.
            base64doc:
              type: string
              required: True
              description: The document contents encrypted into base64 format.
            signer:
              "$ref": "#/components/schemas/Signer"
              required: True
    MeteraiDocument :
      allOf:
      - $ref : "#/components/schemas/Document"
      - type: object
        properties:
          content:
            type: object
            description : Request Body Meterai Document
            properties:
              noDoc:
                type: integer
                format: int32
                description: Document number
                default: 1
                minimum: 1
              tglDoc:
                type : string
                format : date
              docpass:
                type : string
    GetDocument:
      description : Response for Get Document
      allOf:
      - $ref : "#/components/schemas/ApiResponse"
      - type: object
        properties:
          data:
            type: array
            description: List of all documents available related to your account
            items:
              $ref : "#/components/schemas/DocumentFile"
    DocumentFile:
      type: object
      properties:
        dataId:
          type: integer
          format: int32
          description: The Document ID
        fileName:
          type: string
          example: data.pdf
          description: The name of the file related with your account
        status:
          type: string
          example: ONPROGRESS
          description: The status of the document
    Signer:
      type: object
      description: Contains the coordinates of the signature on your document.
      properties:
        lowerLeftX:
          type: string
        lowerLeftY:
          type: string
        upperRightX:
          type: string
        upperRightY:
          type: string
        page:
          type: string
          description: The page location of the signature.
        location:
          type: string
          description: The City or Country where the process is running at.
        certificateLevel:
          type: string
    DocumentTypeResponse:
      description : Response for Document Type
      allOf:
      - $ref : "#/components/schemas/ApiResponse"
      - type: object
        properties:
          data:
            type: array
            description: List of all document types available
            items:
              $ref : "#/components/schemas/DocumentType"
    DocumentType:
      type : object
      properties:
        id:
          type: string
          description: The document type ID. This ID is required for Meterai Placement API.
        nama:
          type : string
          description: the document type name

  parameters:
    skipParam:
      name: skip
      in: query
      description: number of items to skip
      required: true
      schema:
        type: integer
        format: int32
    limitParam:
      name: limit
      in: query
      description: max records to return
      required: true
      schema:
        type: integer
        format: int32
    apiKeyParam:
      name: apiKey
      in: header
      description: API Key generated from dashboard. Each company has a unique API Key. Please do not use other company's API Key as it will lead to process failure.
      required: True
      schema:
        type: string
    emailParam:
      name: email
      in: header
      description: Use the email associated with your account.
      required: True
      schema:
        type: string
      examples:
        email1:
          value: example@email.com
          summary: Sample e-mail format
        email2:
          value: example@gmail.com
          summary: Sample google e-mail format

  response:
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/GeneralError"

  # securitySchemes:
  #   api_key:
  #     type: apiKey
  #     name: api_key
  #     in: header
  
